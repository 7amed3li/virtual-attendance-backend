generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bildirimler {
  id               Int           @id @default(autoincrement())
  kullanici_id     Int?
  baslik           String        @db.VarChar(255)
  icerik           String
  goruldu_mu       Boolean?      @default(false)
  olusturma_tarihi DateTime?     @default(now()) @db.Timestamp(6)
  ders_id          Int?
  kullanicilar     kullanicilar? @relation(fields: [kullanici_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dersler          dersler?      @relation(fields: [ders_id], references: [id], map: "fk_bildirimler_ders")
}

model bolumler {
  id         Int        @id @default(autoincrement())
  ad         String     @db.VarChar(100)
  fakulte_id Int
  fakulteler fakulteler @relation(fields: [fakulte_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  dersler    dersler[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model ders_kayitlari {
  id                Int          @id @default(autoincrement())
  ders_id           Int
  ogrenci_id        Int
  alinma_tipi       String       @db.VarChar(20)
  devamsizlik_durum String[]     @db.VarChar
  universite_kodu   String?      @db.VarChar(50)

  dersler           dersler      @relation(fields: [ders_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  kullanicilar      kullanicilar @relation(name: "OgrenciDersKayitlari", fields: [ogrenci_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([ders_id, ogrenci_id, alinma_tipi])
}

model dersler {
  id                 Int              @id @default(autoincrement())
  ad                 String           @db.VarChar(100)
  bolum_id           Int
  ogretmen_id        Int
  donem              String?          @db.VarChar(50)
  akademik_yil       String?          @db.VarChar(20)
  devamsizlik_limiti Int?             @default(30)
  kod                String?          @unique(map: "unique_kod") @db.VarChar(50)
  sube               String           @default("1") @db.VarChar(20)
  sinif              String?          @db.VarChar(10)
  ders_saat          Int?             // Ders saati (dakika cinsinden, örn: 540 = 09:00, 630 = 10:30)
  bildirimler        bildirimler[]
  ders_kayitlari     ders_kayitlari[]
  bolumler           bolumler         @relation(fields: [bolum_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  kullanicilar       kullanicilar     @relation(fields: [ogretmen_id], references: [id], onDelete: SetNull, onUpdate: NoAction)
  oturumlar          oturumlar[]
}

model fakulteler {
  id       Int        @id @default(autoincrement())
  ad       String     @db.VarChar(100)
  enlem    Float?     // Enlem (koordinat)
  boylam   Float?     // Boylam (koordinat)
  bolumler bolumler[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model kullanicilar {
  id                              Int              @id @default(autoincrement())
  universite_kodu                 String           @unique @db.VarChar(50)
  ad                              String           @db.VarChar(100)
  soyad                           String           @db.VarChar(100)
  eposta                          String?          @db.VarChar(150)
  sifre                           String
  rol                             String           @db.VarChar(20)
  hesap_durumu                    String?          @default("aktif") @db.VarChar(20)
  giris_sayisi                    Int?             @default(0)
  son_giris                       DateTime?        @db.Timestamp(6)
  olusturma_tarihi                DateTime?        @default(now()) @db.Timestamp(6)
  reset_password_token_expires_at DateTime?        @db.Timestamp(6)
  reset_password_token            String?
  telefon                         String?
  son_sifre_degisikligi           DateTime?        @db.Timestamp(6)
  aktif_mi                        Boolean?         @default(true)
  guncelleme_tarihi               DateTime?        @default(now()) @db.Timestamp(6)
  bolum_id                        Int?
  fakulte_id                      Int?
  bildirimler                     bildirimler[]
  ders_kayitlari                  ders_kayitlari[] @relation(name: "OgrenciDersKayitlari")
  dersler                         dersler[]
  senkron_log                     senkron_log[]
  yoklamalar                      yoklamalar[]
}

model oturumlar {
  id                 Int          @id @default(autoincrement())
  ders_id            Int
  tarih              DateTime     @db.Date
  saat               DateTime     @db.Time(6)
  konu               String?
  qr_anahtari        String
  qr_yayin_suresi    Int?         @default(3)
  derslik            String?      @db.VarChar(50)
  olusturma_tarihi   DateTime?    @default(now()) @db.Timestamp(6)
  ogretmen_latitude  Float?
  ogretmen_longitude Float?
  max_count          Int?         @default(1)
  oturum_no          Int?         @default(1)
  dersler            dersler      @relation(fields: [ders_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  yoklamalar         yoklamalar[]

  @@index([ders_id], map: "idx_oturumlar_ders")
}

model senkron_log {
  id             Int          @id @default(autoincrement())
  kullanici_id   Int
  cihaz_id       String?
  senkron_zamani DateTime?    @default(now()) @db.Timestamp(6)
  kullanicilar   kullanicilar @relation(fields: [kullanici_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model yoklamalar {
  id           Int          @id @default(autoincrement())
  oturum_id    Int
  ogrenci_id   Int
  zaman        DateTime     @db.Timestamp(6)
  durum        String?      @db.VarChar(20)
  mazeretli    Boolean?     @default(false)
  konum        String?
  cihaz_id     String?
  ip_adresi    String?
  tarama_tipi  String?      @default("kamera") @db.VarChar(20)
  ders_id      Int?
  aciklama     String?
  tur_no       Int?         @default(1)
  count        Int?         @default(1) // Eski kodlarda kullanılıyordu
  kullanicilar kullanicilar @relation(fields: [ogrenci_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  oturumlar    oturumlar    @relation(fields: [oturum_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([oturum_id, ogrenci_id, tur_no])
  @@unique([oturum_id, cihaz_id, tur_no])
  @@unique([oturum_id, ogrenci_id], map: "unique_oturum_ogrenci") // tur_no NULL olanlar için
  @@index([oturum_id, ogrenci_id], map: "idx_yoklama_oturum_ogrenci")
}
